/**
* устанавливает набор юнитов на определенной територии.
*/
public static class SetUnits extends BroadcastPackage {
int region;
int  units;
public SetUnits() {
 units = new int[4];
}
}

/**
* устанавливает положение игроков на треках.
*/
public static class SetTrack extends BroadcastPackage {
int track;
int  data;
public SetTrack() {
 data = new int[7];
}
}

/**
* устанавливает действие для региона.
*/
public static class SetAction extends BroadcastPackage {
int region;
int  action;
public SetAction() {
}
}

/**
* сообщает всем игрокам о готовности игрока player 
*/
public static class PlayerReady extends BroadcastPackage {
int player;
int  ready;
public PlayerReady() {
}
}

/**
* сообщает всем игрокам, что сейчас ход игрока player
*/
public static class PlayerTurn extends BroadcastPackage {
int player;
public PlayerTurn() {
}
}

/**
* сообщает всем игрокам, что текущий игрок играет приказ с терриротии from на территорию to
*/
public static class PlayerAct extends BroadcastPackage {
int from;
int  to;
public PlayerAct() {
}
}

/**
* сообщеат всем игрокам, что текущий игрок выбрал регион region
*/
public static class PlayerSelectRegion extends BroadcastPackage {
int region;
public PlayerSelectRegion() {
}
}

/**
* сообщает всем игрокам, что текущий игрок перемещает с терриротии from на территорию to юнитов units
*/
public static class PlayerMove extends BroadcastPackage {
int from;
int  to;
int  units;
public PlayerMove() {
 units = new int[4];
}
}

/**
* сообщает игрокам, что открыта карта card из колоды number.
*/
public static class OpenCard extends BroadcastPackage {
int number;
int  card;
public OpenCard() {
}
}

/**
* сообщает игрокам, что была выбрана позиция select.
*/
public static class PlayerSelectItem extends BroadcastPackage {
int select;
public PlayerSelectItem() {
}
}

/**
* сообщает игрокам, какие ставки были сделаны.
*/
public static class PlayerBets extends BroadcastPackage {
int bets;
public PlayerBets() {
bets = new int[7];
}
}

/**
* Передает информацию о смене фазы игры.
*/
public static class ChangePhase extends BroadcastPackage {
int phase;
public ChangePhase() {
}
}

/**
* 
*/
public static class  extends BroadcastPackage {
public () {
}
}

/**
* устанавливает действие для региона.
*/
public static class SetAction extends ClientServerPackage {
int region;
int  action;
public SetAction() {
}
}

/**
* устанавливает готовность клиента к завершению фазы.
*/
public static class Ready extends ClientServerPackage {
int ready;
public Ready() {
}
}

/**
* сообщает серверу, что игрок играет приказ с территории from на территорию to
*/
public static class Act extends ClientServerPackage {
int from;
int  to;
public Act() {
}
}

/**
* сообщает серверу, что игрок выбрал регион region
*/
public static class SelectRegion extends ClientServerPackage {
int region;
public SelectRegion() {
}
}

/**
* сообщает серверу, что игрок перемещает с территории from на территорию to юнитов units
*/
public static class Move extends ClientServerPackage {
int from;
int  to;
int  units;
public Move() {
 units = new int[4];
}
}

/**
* сообщает серверу, что игрок набирает войска в регионе и передает новый набор юнитов.
*/
public static class CollectUnits extends ClientServerPackage {
int region;
int  units;
public CollectUnits() {
 units = new int[4];
}
}

/**
* сообщает серверу, что игрок собирает очки влияния с региона.
*/
public static class CollectInfluence extends ClientServerPackage {
int region;
public CollectInfluence() {
}
}

/**
* 
*/
public static class SelectItem extends ClientServerPackage {
int select;
public SelectItem() {
}
}

/**
* сообщает серверу, что игрок ставит value очков влияния.
*/
public static class Bet extends ClientServerPackage {
int value;
public Bet() {
}
}

/**
* запрашивает у сервера информацию о текущем состоянии. Используется для восстановления при сбоях.	
*/
public static class GetGlobalState extends ClientServerPackage {
public GetGlobalState() {
}
}

/**
* 
*/
public static class  extends ClientServerPackage {
public () {
}
}

/**
* сообщает клиенту что через seconds секунд, готовность игрока будет проставлена автоматически. 
*/
public static class ForceReadyAt extends ServerClientPackage {
int seconds;
public ForceReadyAt() {
}
}

/**
* добавляет игроку очки влияния в количестве value. Value может быть отрицательным. 
*/
public static class AddInfluence extends ServerClientPackage {
int value;
public AddInfluence() {
}
}

/**
* передает всю информацию о текущем состоянии игры. Используется для восстановления разорванных игровых сессий и синхронизации после сбоя.
*/
public static class SetGlobalState extends ServerClientPackage {
int stateData;
public SetGlobalState() {
}
}

